{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","visibleGoods","goods","ALPHABET","sort","LENGTH","good1","good2","length","reverse","getReorderedGoods","isDefaultOrder","className","type","classNames","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAuBKA,E,0EAlBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAQGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6BE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EA5CR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENE,EAAY,YAAOC,GAEzB,OAAQL,GACN,KAAKL,EAASW,SACZF,EAAaG,OACb,MACF,KAAKZ,EAASa,OACZJ,EAAaG,MAAK,SAACE,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAS7D,OAJIT,GACFE,EAAaQ,UAGRR,EAwBcS,CACnBjB,EACA,CACEI,WACAE,eAIEY,GAAkBZ,GAAcF,IAAaL,EAASI,KAE5D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYjB,IAAaL,EAASW,WAGtCY,QAvCsB,WAC5BjB,EAAYN,EAASW,WA6BjB,iCAcA,wBACEU,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYjB,IAAaL,EAASa,SAGtCU,QAjDoB,WAC1BjB,EAAYN,EAASa,SAuCjB,4BAcA,wBACEQ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAaf,IAGjBgB,QA3De,WACrBf,GAAc,SAAAgB,GAAS,OAAKA,MAiDxB,sBAcEL,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAhEW,WACnBjB,EAAYN,EAASI,MACrBI,GAAc,IA2DR,sBASJ,6BACE,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cC1IpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b78176e3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortByAlphabetHandler = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLengthHandler = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverseHandler = () => {\n    setIsReversed(prevState => !prevState);\n  };\n\n  const resetHandler = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    {\n      sortType,\n      isReversed,\n    },\n  );\n\n  const isDefaultOrder = !isReversed && sortType === SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={sortByAlphabetHandler}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortByLengthHandler}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={reverseHandler}\n        >\n          Reverse\n        </button>\n\n        {!isDefaultOrder && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetHandler}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}